{
  "openapi": "3.0.1",
  "info": {
    "title": "HRnest API",
    "version": "v1"
  },
  "paths": {
    "/api/v{version}/Businesstrip": {
      "get": {
        "tags": [
          "Businesstrip"
        ],
        "summary": "Get business trips",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinesstripsFilterModelApiFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinesstripsFilterModelApiFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BusinesstripsFilterModelApiFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinesstripResultModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Company": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Return company data",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResultModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Create a company",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyCreateModelApiCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyCreateModelApiCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyCreateModelApiCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Company/Departments": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get company departments",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentsResultModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Company/IsWorkingday": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Check if specified day is a working day",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsWorkingDaySearchModelApiSearchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IsWorkingDaySearchModelApiSearchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IsWorkingDaySearchModelApiSearchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Employee/{userId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Return employee data",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Employee Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Employee Id",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Employee": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get employees data matching the specified filters",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeesFilterModelApiFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeesFilterModelApiFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeesFilterModelApiFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResultModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create employee user",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request containing the Employee data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCreateModelApiCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCreateModelApiCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCreateModelApiCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Change employee user",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request containing the search and the Employee data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelEmployeeChangeModelApiChangeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelEmployeeChangeModelApiChangeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelEmployeeChangeModelApiChangeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Delete employee user",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request containing the search data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelApiSearchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelApiSearchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelApiSearchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Employee/Absences": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get absent employees infos matching the specified filters",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbsencesFilterModelApiFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbsencesFilterModelApiFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbsencesFilterModelApiFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsencesResultModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Employee/Deactivate": {
      "patch": {
        "tags": [
          "Employee"
        ],
        "summary": "Deactivate employee user",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request containing the search data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelApiSearchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelApiSearchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelApiSearchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Employee/Activate": {
      "patch": {
        "tags": [
          "Employee"
        ],
        "summary": "Activate employee user",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request containing the search data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelApiSearchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelApiSearchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelApiSearchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Employee/StartWork": {
      "patch": {
        "tags": [
          "Employee"
        ],
        "summary": "Register start of the realwork",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Start data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelStartWorkModelApiChangeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelStartWorkModelApiChangeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelStartWorkModelApiChangeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Employee/EndWork": {
      "patch": {
        "tags": [
          "Employee"
        ],
        "summary": "Register end of the realwork",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "End data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelEndWorkModelApiChangeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelEndWorkModelApiChangeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSearchModelEndWorkModelApiChangeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/ICal": {
      "get": {
        "tags": [
          "ICal"
        ],
        "summary": "Export calendar events in the iCal format",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICalsFilterModelApiFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ICalsFilterModelApiFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ICalsFilterModelApiFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/Worktime": {
      "get": {
        "tags": [
          "Realwork"
        ],
        "summary": "Get registered worktimes",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealworksFilterModelApiFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealworksFilterModelApiFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RealworksFilterModelApiFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RealworkResultModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Request/{requestNumber}": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Return request data",
        "parameters": [
          {
            "name": "requestNumber",
            "in": "path",
            "description": "Request unique number",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Request unique number",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Request": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Get active requests",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsFilterModelApiFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsFilterModelApiFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsFilterModelApiFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestsResultModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Request/AvailableTypes": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Get available request types",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableTypesResultModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Timetable/Items": {
      "get": {
        "tags": [
          "Timetable"
        ],
        "summary": "Get active items of timetable of the specified ID",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimetableItemsSearchModelTimetableItemsFilterModelApiFindModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TimetableItemsSearchModelTimetableItemsFilterModelApiFindModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TimetableItemsSearchModelTimetableItemsFilterModelApiFindModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimetableItemsResultModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Timetable": {
      "post": {
        "tags": [
          "Timetable"
        ],
        "summary": "Create a timetable",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Timetable data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimetableCreateModelApiCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TimetableCreateModelApiCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TimetableCreateModelApiCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BusinesstripsFilterModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Get business trips by the employee user ID",
            "format": "uuid",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Get business trips by the employee department ID",
            "format": "int32",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "description": "Get business trips by the employee organization ID",
            "format": "int32",
            "nullable": true
          },
          "dateFrom": {
            "type": "string",
            "description": "Get business trips that are later or equal to the date; default = Today",
            "format": "date",
            "nullable": true
          },
          "dateTo": {
            "type": "string",
            "description": "Get business trips that are earlier or equal to the date; default = Today",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Business trips filtering data"
      },
      "BusinesstripsFilterModelApiFilterModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/BusinesstripsFilterModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to perform simple operation on entities filtered by the filter data"
      },
      "DepartmentResultModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Department ID",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Department name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Employee department data"
      },
      "UserResultModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "description": "Employee first name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Employee last name",
            "nullable": true
          },
          "idNumber": {
            "type": "string",
            "description": "Employee custom ID number",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Employee department ID",
            "format": "int32",
            "nullable": true
          },
          "department": {
            "$ref": "#/components/schemas/DepartmentResultModel"
          }
        },
        "additionalProperties": false,
        "description": "Employee user data"
      },
      "BusinesstripResultModel": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Business trip number",
            "nullable": true,
            "readOnly": true
          },
          "userId": {
            "type": "string",
            "description": "Employee user ID",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "description": "Business trip date",
            "format": "date"
          },
          "dateFrom": {
            "type": "string",
            "description": "Business trip beginning date",
            "format": "date"
          },
          "dateTo": {
            "type": "string",
            "description": "Business trip ending date",
            "format": "date"
          },
          "totalCosts": {
            "type": "number",
            "description": "Total costs",
            "format": "double",
            "nullable": true
          },
          "totalCostsWithCompanyPayments": {
            "type": "number",
            "description": "Total costs of a business trip with company payments, e.g. with a company card",
            "format": "double",
            "nullable": true
          },
          "advancePaid": {
            "type": "number",
            "description": "The value of the advance paid to the employee",
            "format": "double",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserResultModel"
          }
        },
        "additionalProperties": false,
        "description": "Business trips imte data"
      },
      "CompanyResultModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Company ID",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "description": "Company email",
            "nullable": true
          },
          "login": {
            "type": "string",
            "description": "Company admin login",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Company data"
      },
      "CompanyCreateModel": {
        "required": [
          "language",
          "login",
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "login": {
            "maxLength": 256,
            "minLength": 4,
            "type": "string",
            "description": "Company admin login"
          },
          "password": {
            "maxLength": 100,
            "minLength": 8,
            "pattern": "^((?!.*?[<>])(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])|(?!.*?[<>])(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[^a-zA-Z0-9<>])|(?!.*?[<>])(?=.*?[A-Z])(?=.*?[0-9])(?=.*?[^a-zA-Z0-9<>])|(?!.*?[<>])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^a-zA-Z0-9<>])).{8,}$",
            "type": "string",
            "description": "Company admin password"
          },
          "language": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "Company language code"
          },
          "email": {
            "maxLength": 256,
            "minLength": 3,
            "pattern": "^(?(\")(\".+?(?<!\\\\)\"@)|(([0-9a-z]((\\.(?!\\.))|[-!#\\$%&'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?<=[0-9a-z])@))(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-z][-0-9a-z]*[0-9a-z]*\\.)+[a-z0-9][\\-a-z0-9]{0,22}[a-z0-9]))$",
            "type": "string",
            "description": "Company email",
            "nullable": true
          },
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Company name"
          },
          "numberOfEmployees": {
            "type": "integer",
            "description": "Number of employees; default = 5",
            "format": "int32"
          },
          "leaveModule": {
            "type": "boolean",
            "description": "Is leave module availabe; default = true"
          },
          "delegationsModule": {
            "type": "boolean",
            "description": "Is delegations module availabe; default = false"
          },
          "workTimeModule": {
            "type": "boolean",
            "description": "Is worktime module availabe; default = false"
          },
          "personalFileModule": {
            "type": "boolean",
            "description": "Is personal file module availabe; default = false"
          },
          "employmentContract": {
            "type": "boolean",
            "description": "If true - the only available form of contract is an employment contract, if false - other forms of contract are also available in the system; default = false"
          }
        },
        "additionalProperties": false,
        "description": "Data to create a company"
      },
      "CompanyCreateModelApiCreateModel": {
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/CompanyCreateModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to save provided data as new entities"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "DepartmentsResultModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Department ID",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Department name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Departments item data"
      },
      "IsWorkingDaySearchModel": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date to check; default = Today",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Check working day data"
      },
      "IsWorkingDaySearchModelApiSearchModel": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IsWorkingDaySearchModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to perform simple operation on entities selected by the search data"
      },
      "ContractType": {
        "enum": [
          "UmowaOPrace",
          "Dzialalnosc",
          "UmowaZlecenie",
          "UmowaODzielo",
          "Praktyka",
          "Kontrakt"
        ],
        "type": "string"
      },
      "EmployeeResultModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Employee user ID",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "description": "Employee email",
            "nullable": true
          },
          "login": {
            "type": "string",
            "description": "Employee login",
            "nullable": true
          },
          "pidentifier": {
            "type": "string",
            "description": "Employee pidentifier",
            "nullable": true
          },
          "idNumber": {
            "type": "string",
            "description": "Employee custom ID number",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "Employee first name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Employee last name",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Employee language code",
            "nullable": true
          },
          "contractType": {
            "$ref": "#/components/schemas/ContractType"
          },
          "organization": {
            "type": "string",
            "description": "Employee organization name",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Employee department ID",
            "format": "int32",
            "nullable": true
          },
          "managerId": {
            "type": "string",
            "description": "Employee superior ID",
            "format": "uuid",
            "nullable": true
          },
          "isManager": {
            "type": "boolean",
            "description": "Is employee a superior"
          },
          "needManager": {
            "type": "boolean",
            "description": "Does superior is required for the employee"
          },
          "position": {
            "type": "string",
            "description": "Employee position",
            "nullable": true
          },
          "salaried": {
            "type": "boolean",
            "description": "Is employee salaried",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Is employee active"
          }
        },
        "additionalProperties": false,
        "description": "Employee data"
      },
      "EmployeesFilterModel": {
        "type": "object",
        "properties": {
          "departmentId": {
            "type": "integer",
            "description": "Get employees by the employee department ID",
            "format": "int32",
            "nullable": true
          },
          "managerId": {
            "type": "string",
            "description": "Get employees by the superior ID",
            "format": "uuid",
            "nullable": true
          },
          "isManager": {
            "type": "boolean",
            "description": "Get employees that are a superior or not",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Get employees that are a active or not",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Employees filtering data"
      },
      "EmployeesFilterModelApiFilterModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/EmployeesFilterModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to perform simple operation on entities filtered by the filter data"
      },
      "EmployeeCreateModel": {
        "required": [
          "firstName",
          "language",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 25,
            "type": "string",
            "description": "Employee first name"
          },
          "lastName": {
            "maxLength": 50,
            "type": "string",
            "description": "Employee last name"
          },
          "position": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Employee position",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Employee department ID",
            "format": "int32",
            "nullable": true
          },
          "organization": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "Employee organization name",
            "nullable": true
          },
          "idNumber": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Employee custom ID number",
            "nullable": true
          },
          "language": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "Employee language code"
          },
          "email": {
            "maxLength": 256,
            "minLength": 3,
            "pattern": "^(?(\")(\".+?(?<!\\\\)\"@)|(([0-9a-z]((\\.(?!\\.))|[-!#\\$%&'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?<=[0-9a-z])@))(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-z][-0-9a-z]*[0-9a-z]*\\.)+[a-z0-9][\\-a-z0-9]{0,22}[a-z0-9]))$",
            "type": "string",
            "description": "Employee email",
            "nullable": true
          },
          "pidentifier": {
            "maxLength": 11,
            "minLength": 1,
            "type": "string",
            "description": "Employee pidentifier",
            "nullable": true
          },
          "isManager": {
            "type": "boolean",
            "description": "Is employee a superior"
          },
          "needManager": {
            "type": "boolean",
            "description": "Does superior is required for the employee"
          },
          "managerId": {
            "type": "string",
            "description": "Employee superior ID",
            "format": "uuid",
            "nullable": true
          },
          "salaried": {
            "type": "boolean",
            "description": "Is employee salaried"
          },
          "contractType": {
            "$ref": "#/components/schemas/ContractType"
          },
          "comments": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Comments",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data to create an employee"
      },
      "EmployeeCreateModelApiCreateModel": {
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/EmployeeCreateModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to save provided data as new entities"
      },
      "EmployeeSearchModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Find employee by the employee user ID",
            "format": "uuid",
            "nullable": true
          },
          "login": {
            "type": "string",
            "description": "Find employee by the employee login",
            "nullable": true
          },
          "idNumber": {
            "type": "string",
            "description": "Find employee by the custom employee ID",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Find employee data; it's required to provide one of these values"
      },
      "EmployeeChangeModel": {
        "required": [
          "firstName",
          "language",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 25,
            "type": "string",
            "description": "Employee first name"
          },
          "lastName": {
            "maxLength": 50,
            "type": "string",
            "description": "Employee last name"
          },
          "position": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Employee position",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Employee department ID",
            "format": "int32",
            "nullable": true
          },
          "organization": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "Employee organization name",
            "nullable": true
          },
          "idNumber": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Employee custom ID number",
            "nullable": true
          },
          "language": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "Employee language code"
          },
          "email": {
            "maxLength": 256,
            "minLength": 3,
            "pattern": "^(?(\")(\".+?(?<!\\\\)\"@)|(([0-9a-z]((\\.(?!\\.))|[-!#\\$%&'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?<=[0-9a-z])@))(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-z][-0-9a-z]*[0-9a-z]*\\.)+[a-z0-9][\\-a-z0-9]{0,22}[a-z0-9]))$",
            "type": "string",
            "description": "Employee email",
            "nullable": true
          },
          "pidentifier": {
            "maxLength": 11,
            "minLength": 1,
            "type": "string",
            "description": "Employee pidentifier",
            "nullable": true
          },
          "isManager": {
            "type": "boolean",
            "description": "Is employee a superior"
          },
          "needManager": {
            "type": "boolean",
            "description": "Does superior is required for the employee"
          },
          "managerId": {
            "type": "string",
            "description": "Employee superior ID",
            "format": "uuid",
            "nullable": true
          },
          "salaried": {
            "type": "boolean",
            "description": "Is employee salaried"
          },
          "contractType": {
            "$ref": "#/components/schemas/ContractType"
          },
          "comments": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Comments",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data to change an employee"
      },
      "EmployeeSearchModelEmployeeChangeModelApiChangeModel": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/EmployeeSearchModel"
          },
          "model": {
            "$ref": "#/components/schemas/EmployeeChangeModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to save provided data to entities selected by the search data"
      },
      "EmployeeSearchModelApiSearchModel": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/EmployeeSearchModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to perform simple operation on entities selected by the search data"
      },
      "AbsencesFilterModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Get absences by the employee user ID",
            "format": "uuid",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Get absences by the employee department ID",
            "format": "int32",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "description": "Get absences by the employee organization ID",
            "format": "int32",
            "nullable": true
          },
          "dateFrom": {
            "type": "string",
            "description": "Get absences that are later or equal to the date; default = Today",
            "format": "date",
            "nullable": true
          },
          "dateTo": {
            "type": "string",
            "description": "Get absences that are earlier or equal to the date; default = Today",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Absences filtering data"
      },
      "AbsencesFilterModelApiFilterModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AbsencesFilterModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to perform simple operation on entities filtered by the filter data"
      },
      "HolidayType": {
        "enum": [
          "Wypoczynkowy",
          "NaZadanie",
          "Okolicznosciowy",
          "OpiekaNadDzieckiem",
          "UrlopBezplatny",
          "Jubileuszowy",
          "WezwanieSadowe",
          "ZaSwieto",
          "Nieobecnosc",
          "Macierzynski",
          "Ojcowski",
          "Rodzicielski",
          "Chorobowy",
          "PoszukiwaniePracy",
          "WypoczynkowyDodatkowy",
          "Krwiodawstwo",
          "PracaZdalna",
          "WolneZaNadgodziny",
          "InnaNieobecnosc",
          "ZawieszenieUmowyOWspolpracy",
          "DodatkowyMacierzynski",
          "Krew2",
          "Delegation",
          "Wychowawczy",
          "PracaWsobote",
          "Szkolenie",
          "UsprawiedliwionaNieob",
          "PrzerwaWSwiadczeniu",
          "RejestracjaNadgodzin",
          "ZwolnienieZeSwiadczeniaPracy",
          "WolneHarmonogramowe",
          "UrlopDodatkowy",
          "ChorobaBezZwolnienia",
          "Flexitime",
          "NiedostepnoscDodatkowa",
          "EzwolnienieLekarskie",
          "Szkolenie2",
          "EkwiwalentZaUrlop",
          "PracaZdalnaiProspect",
          "PracaWdzienWolny",
          "UrlopDodatkowyFunkcyjny",
          "UrlopDodatkowy6h",
          "ZwolnienieNaSiebie",
          "ZwolnienieNaDziecko",
          "ZwolnienieKodB",
          "SprawyPrywatne",
          "PlatnyChorobowy",
          "Aplikacja",
          "NieobecnoscNieusprawiedliwiona",
          "ZwolnienieNaDzieckoCuf",
          "OpiekaNadChorymDzieckiem",
          "DniEdukacyjne",
          "OpiekaNadCzlonkiemRodziny",
          "SzkolenieKsiegowe",
          "InneUsprawNieplatne",
          "InneUsprawPlatne",
          "NieusprawiedliwienieNieplatne",
          "Zlecenie",
          "OdbiorZaSwietoZLimitu",
          "UdzielenieCzasuWolnego",
          "Niezdolnosc",
          "NieobecnoscBezplatna",
          "NiedostepnoscBezLimitu",
          "Urodziny",
          "PrzerwaWSwiadczeniuZlimitu",
          "PrzerwaWSwiadczeniuChoroba",
          "PrywatneWyjscie",
          "OdpracowanieWyjsciaPrywatnego",
          "DodatkowyDzienWolny",
          "PracaZdalna2zmiana",
          "PracaPozaBiuremZamawiajacego",
          "SzkolenieZewnetrzne",
          "NieplatnaPrzerwaWSwiadczeniu",
          "ACCA",
          "DzienNaPrzeprowadzke",
          "OdbiorZaDelegacje",
          "NieobUsprNiepl",
          "WczesniejszeWyjscie",
          "HomeOffice",
          "ZwolnienieSzpitalne",
          "OdbiorDniaWolnego",
          "ZwolnienieZeSwiadczeniaZWynagrodzeniem",
          "NieobecnoscNieusprawNieplatna",
          "OdbiorZaPraceWniedziele",
          "NiedostepnoscSpecjalna",
          "UrlopRehabilitacyjny",
          "WyjscieSluzbowe",
          "WyjazdDoKlienta",
          "ZwolnienieCiaza",
          "Bezplatne",
          "PracaZdalna2",
          "ZwolnienieCzlonekRodziny",
          "ZwolnienieChoroboweDziecko",
          "WolneWSoboteZLimitu",
          "NiedostepnoscChoroba",
          "WolneZaSzkolenie",
          "WolneZaWykorzystanyUrlop",
          "UrlopOdSzefa",
          "RozliczoneNadgodziny",
          "DzienWolny5dni",
          "Dyzur",
          "ObecnyPozaProjektem",
          "NiedostepnoscZlecenie",
          "NiedostepnoscBezplatna",
          "NieobecnoscPlatna80",
          "PracaUKlienta",
          "SzkolenieWewnetrzne",
          "RejestracjaGodzin",
          "Kwarantanna",
          "PracaZDomuHOc",
          "PracaPozaBiuremZamawiajacegoC",
          "ZasilekOpiekunczy",
          "ZwolnienieLekarskieDzieckoDodatkowyLimit",
          "DzienWolny",
          "ZwolnienieWezwanieOrganowPanstwowych",
          "DzienWolnyTarczaAntykryzysowa",
          "PracaWBiurze",
          "DyzurWDomuCovid",
          "WolneObnizonyCzasPracy",
          "DostepnoscZdalna",
          "SwiadczenieRehabilitacyjne"
        ],
        "type": "string"
      },
      "AbsencesResultModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Employee user ID",
            "format": "uuid"
          },
          "dateFrom": {
            "type": "string",
            "description": "Absence beginning date",
            "format": "date"
          },
          "dateTo": {
            "type": "string",
            "description": "Absence ending date",
            "format": "date"
          },
          "type": {
            "$ref": "#/components/schemas/HolidayType"
          },
          "title": {
            "type": "string",
            "description": "Absence type title",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserResultModel"
          }
        },
        "additionalProperties": false,
        "description": "Absences item data"
      },
      "StartWorkModel": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Worktime start time; default = Now",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Register worktime beginning data"
      },
      "EmployeeSearchModelStartWorkModelApiChangeModel": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/EmployeeSearchModel"
          },
          "model": {
            "$ref": "#/components/schemas/StartWorkModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to save provided data to entities selected by the search data"
      },
      "EndWorkModel": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Worktime end time; default = Now",
            "format": "date-time",
            "nullable": true
          },
          "breakMinutes": {
            "maximum": 720,
            "minimum": 0,
            "type": "integer",
            "description": "In worktime break in minutes",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Register worktime ending data"
      },
      "EmployeeSearchModelEndWorkModelApiChangeModel": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/EmployeeSearchModel"
          },
          "model": {
            "$ref": "#/components/schemas/EndWorkModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to save provided data to entities selected by the search data"
      },
      "ICalsFilterModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Get events by the employee user ID",
            "format": "uuid",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Get events by the employee department ID",
            "format": "int32",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "description": "Get events by the employee organization ID",
            "format": "int32",
            "nullable": true
          },
          "dateFrom": {
            "type": "string",
            "description": "Get events that are later or equal to the date; default = Today",
            "format": "date",
            "nullable": true
          },
          "dateTo": {
            "type": "string",
            "description": "Get events that are earlier or equal to the date; default = Today",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "iCal events filtering data"
      },
      "ICalsFilterModelApiFilterModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/ICalsFilterModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to perform simple operation on entities filtered by the filter data"
      },
      "RealworksFilterModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Get registerd worktimes by the employee user ID",
            "format": "uuid",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Get registerd worktimes by the employee department ID",
            "format": "int32",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "description": "Get registerd worktimes by the employee organization ID",
            "format": "int32",
            "nullable": true
          },
          "dateFrom": {
            "type": "string",
            "description": "Get registerd worktimes that are later or equal to the date; default = Today",
            "format": "date",
            "nullable": true
          },
          "dateTo": {
            "type": "string",
            "description": "Get registerd worktimes that are earlier or equal to the date; default = Today",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Registerd worktimes filtering data"
      },
      "RealworksFilterModelApiFilterModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/RealworksFilterModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to perform simple operation on entities filtered by the filter data"
      },
      "RealworkResultModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Employee user ID",
            "format": "uuid"
          },
          "timeFrom": {
            "type": "string",
            "description": "Registerd worktime beginning date and time",
            "format": "date-time"
          },
          "timeTo": {
            "type": "string",
            "description": "Registerd worktime ending date and time",
            "format": "date-time"
          },
          "comment": {
            "type": "string",
            "description": "Registerd worktime comment",
            "nullable": true
          },
          "timeFromIp": {
            "type": "string",
            "description": "Registerd start-worktime IP address",
            "nullable": true
          },
          "timeToIp": {
            "type": "string",
            "description": "Registerd stop-worktime IP address",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserResultModel"
          }
        },
        "additionalProperties": false,
        "description": "Registerd worktime data"
      },
      "RequestStatus": {
        "enum": [
          "WaitingForMngrApproval",
          "ApprovedByMngr",
          "AcceptedByHr",
          "RejectedByMngr",
          "RejectedByHr",
          "Canceled",
          "Created",
          "WaitingForHrAccept",
          "ApprovedByDirector",
          "RejectedByDirector",
          "Setup",
          "ApprovedByMngr2",
          "RejectedByMngr2",
          "BackToUser",
          "CzekaNaAkceptacjePrzedstawicielaPrac",
          "ZaakceptowanyPrzezPrzedstawicielaPrac",
          "OdrzuconyPrzezPrzedstawicielaPrac",
          "WaitingFor2MngrApproval",
          "WaitingForDirectorApproval",
          "Edited"
        ],
        "type": "string"
      },
      "RequestResultModel": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/HolidayType"
          },
          "isWholeDay": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "dateFrom": {
            "type": "string",
            "format": "date"
          },
          "dateTo": {
            "type": "string",
            "format": "date"
          },
          "timeFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "numberOfDays": {
            "type": "integer",
            "format": "int32"
          },
          "workHours": {
            "type": "number",
            "format": "double"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "managerComments": {
            "type": "string",
            "nullable": true
          },
          "hrComments": {
            "type": "string",
            "nullable": true
          },
          "directorComments": {
            "type": "string",
            "nullable": true
          },
          "additionalField1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "additionalField2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserResultModel"
          }
        },
        "additionalProperties": false
      },
      "RequestsFilterModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Get requests by the employee user ID",
            "format": "uuid",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Get requests by the employee department ID",
            "format": "int32",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "description": "Get requests by the employee organization ID",
            "format": "int32",
            "nullable": true
          },
          "dateFrom": {
            "type": "string",
            "description": "Get requests that are later or equal to the date; default = Today",
            "format": "date-time",
            "nullable": true
          },
          "dateTo": {
            "type": "string",
            "description": "Get requests that are earlier or equal to the date; default = Today",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Requests filtering data"
      },
      "RequestsFilterModelApiFilterModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/RequestsFilterModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to perform simple operation on entities filtered by the filter data"
      },
      "RequestsResultModel": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "Request number",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "description": "Employee user ID",
            "format": "uuid"
          },
          "dateFrom": {
            "type": "string",
            "description": "Request beginning date",
            "format": "date"
          },
          "dateTo": {
            "type": "string",
            "description": "Request ending date",
            "format": "date"
          },
          "status": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "type": {
            "$ref": "#/components/schemas/HolidayType"
          },
          "title": {
            "type": "string",
            "description": "Request type title",
            "nullable": true
          },
          "totalHours": {
            "type": "number",
            "description": "Request time in hours",
            "format": "double"
          },
          "user": {
            "$ref": "#/components/schemas/UserResultModel"
          }
        },
        "additionalProperties": false,
        "description": "Request item data"
      },
      "AvailableTypesResultModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Request type ID",
            "format": "int32"
          },
          "employment": {
            "type": "boolean",
            "description": "Is available to employees working under an employment contract"
          },
          "otherContract": {
            "type": "boolean",
            "description": "Is available for other co-workers (B2B, other contracts)"
          },
          "type": {
            "$ref": "#/components/schemas/HolidayType"
          },
          "title": {
            "type": "string",
            "description": "Request type title",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Available request type data"
      },
      "TimetableItemsSearchModel": {
        "required": [
          "timetableId"
        ],
        "type": "object",
        "properties": {
          "timetableId": {
            "type": "integer",
            "description": "Find items of the specified timetable ID",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Timetable items search data"
      },
      "TimetableItemsFilterModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Get timetable items by the employee user ID",
            "format": "uuid",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Get timetable items by the employee department ID",
            "format": "int32",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "description": "Get timetable items by the employee organization ID",
            "format": "int32",
            "nullable": true
          },
          "dateFrom": {
            "type": "string",
            "description": "Get timetable items that are later or equal to the date",
            "format": "date",
            "nullable": true
          },
          "dateTo": {
            "type": "string",
            "description": "Get timetable items that are earlier or equal to the date",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Timetable items filtering data"
      },
      "TimetableItemsSearchModelTimetableItemsFilterModelApiFindModel": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/TimetableItemsSearchModel"
          },
          "filter": {
            "$ref": "#/components/schemas/TimetableItemsFilterModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to search for entity and return its filtered children"
      },
      "TimetableItemsResultModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Employee user ID",
            "format": "uuid"
          },
          "timeFrom": {
            "type": "string",
            "description": "Timetable item beginning date and time",
            "format": "date-time"
          },
          "timeTo": {
            "type": "string",
            "description": "Timetable item ending date and time",
            "format": "date-time"
          },
          "comment": {
            "type": "string",
            "description": "Timetable item comment",
            "nullable": true
          },
          "breakMinutes": {
            "type": "integer",
            "description": "Timetable item break time in minutes",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/UserResultModel"
          }
        },
        "additionalProperties": false,
        "description": "Timetable item data"
      },
      "WorktimeMode": {
        "enum": [
          "Basic",
          "Equivalent"
        ],
        "type": "string"
      },
      "Timezone": {
        "enum": [
          "UTC",
          "GMTStandardTime",
          "WEuropeStandardTime",
          "CentralEuropeanStandardTime",
          "RomanceStandardTime",
          "CentralEuropeStandardTime",
          "KaliningradStandardTime",
          "RussianStandardTime",
          "EkaterinburgStandardTime",
          "NCentralAsiaStandardTime",
          "NorthAsiaStandardTime",
          "NorthAsiaEastStandardTime",
          "YakutskStandardTime",
          "VladivostokStandardTime",
          "MagadanStandardTime",
          "CentralAsiaStandardTime"
        ],
        "type": "string"
      },
      "TimetableItem": {
        "required": [
          "comment",
          "timeFrom",
          "timeTo",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Timetable item employee user ID",
            "format": "uuid"
          },
          "timeFrom": {
            "type": "string",
            "description": "Timetable item beginning date and time",
            "format": "date-time"
          },
          "timeTo": {
            "type": "string",
            "description": "Timetable item ending date and time",
            "format": "date-time"
          },
          "comment": {
            "maxLength": 250,
            "type": "string",
            "description": "Timetable item comment"
          },
          "breakMinutes": {
            "maximum": 720,
            "minimum": 0,
            "type": "integer",
            "description": "Timetable item break time in minutes",
            "format": "int32"
          },
          "commentOnly": {
            "type": "boolean",
            "description": "Is the item a comment only?"
          }
        },
        "additionalProperties": false,
        "description": "Timetable item data"
      },
      "TimetableCreateModel": {
        "required": [
          "dateFrom",
          "dateTo",
          "items",
          "mode",
          "timezone",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 250,
            "type": "string",
            "description": "Timetable title"
          },
          "description": {
            "maxLength": 250,
            "type": "string",
            "description": "Timetable description",
            "nullable": true
          },
          "dateFrom": {
            "type": "string",
            "description": "Timetable beginning date",
            "format": "date"
          },
          "dateTo": {
            "type": "string",
            "description": "Timetable ending date",
            "format": "date"
          },
          "mode": {
            "$ref": "#/components/schemas/WorktimeMode"
          },
          "timezone": {
            "$ref": "#/components/schemas/Timezone"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimetableItem"
            },
            "description": "Timetable items collection"
          }
        },
        "additionalProperties": false,
        "description": "Data to create a timetable"
      },
      "TimetableCreateModelApiCreateModel": {
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/TimetableCreateModel"
          }
        },
        "additionalProperties": false,
        "description": "API request model to save provided data as new entities"
      }
    },
    "securitySchemes": {
      "http": {
        "type": "http",
        "description": "Basic",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "http": []
    }
  ]
}